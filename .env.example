# Ottawa City Services RAG Chatbot - Environment Variables
# Copy this file to .env and fill in your values

# =============================================================================
# LLM API Configuration
# =============================================================================

# Groq API Key (Primary LLM Provider)
# Get your API key from: https://console.groq.com/keys
GROQ_API_KEY=your_groq_api_key_here

# OpenAI API Key (Alternative LLM Provider)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# Application Configuration
# =============================================================================

# Application Environment
ENVIRONMENT=development
# Options: development, staging, production

# Debug Mode (True for development, False for production)
DEBUG=True

# Application Port
PORT=7860

# Application Host
HOST=127.0.0.1

# =============================================================================
# Database Configuration
# =============================================================================

# Vector Database Path
VECTOR_DB_PATH=data/chroma_db

# ChromaDB Collection Name
COLLECTION_NAME=ottawa_docs

# Vector Database Type
VECTOR_DB_TYPE=chromadb
# Options: chromadb, pinecone, weaviate

# =============================================================================
# RAG Pipeline Configuration
# =============================================================================

# Embedding Model
EMBEDDING_MODEL=all-MiniLM-L6-v2

# LLM Model Name
LLM_MODEL=llama3-8b-8192

# Maximum tokens for LLM responses
MAX_TOKENS=1000

# LLM Temperature (0.0 = deterministic, 1.0 = creative)
TEMPERATURE=0.1

# Number of documents to retrieve for context
RETRIEVAL_K=5

# Similarity threshold for document retrieval
SIMILARITY_THRESHOLD=0.7

# =============================================================================
# Web Scraping Configuration
# =============================================================================

# Scraping delays (seconds)
SCRAPING_DELAY=1

# Maximum pages to scrape (for testing)
MAX_PAGES=100

# User agent for web scraping
USER_AGENT=Ottawa RAG Bot 1.0

# Request timeout (seconds)
REQUEST_TIMEOUT=30

# =============================================================================
# Data Processing Configuration
# =============================================================================

# Text chunk size (characters)
CHUNK_SIZE=800

# Text chunk overlap (characters)
CHUNK_OVERLAP=100

# Minimum chunk size (characters)
MIN_CHUNK_SIZE=50

# Maximum chunk size (characters)  
MAX_CHUNK_SIZE=1500

# =============================================================================
# Logging Configuration
# =============================================================================

# Log level
LOG_LEVEL=INFO
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL

# Log file path
LOG_FILE=logs/ottawa_rag.log

# Enable console logging
CONSOLE_LOGGING=True

# Enable file logging
FILE_LOGGING=True

# =============================================================================
# Security Configuration
# =============================================================================

# API rate limiting (requests per minute)
RATE_LIMIT=60

# Enable CORS (for web deployment)
ENABLE_CORS=True

# Allowed origins (comma-separated)
ALLOWED_ORIGINS=http://localhost:7860,https://yourdomain.com

# =============================================================================
# Monitoring & Analytics
# =============================================================================

# Enable usage analytics
ENABLE_ANALYTICS=False

# Analytics provider
ANALYTICS_PROVIDER=none
# Options: none, google_analytics, mixpanel

# Analytics tracking ID
ANALYTICS_ID=

# =============================================================================
# Deployment Configuration
# =============================================================================

# Deployment platform
DEPLOYMENT_PLATFORM=local
# Options: local, huggingface, docker, aws, gcp, azure

# Hugging Face Spaces configuration
HF_SPACE_NAME=ottawa-city-services-chatbot
HF_USERNAME=yourusername

# Docker configuration
DOCKER_IMAGE_NAME=ottawa-rag-chatbot
DOCKER_TAG=latest

# =============================================================================
# Feature Flags
# =============================================================================

# Enable French language support
ENABLE_FRENCH=False

# Enable voice interface
ENABLE_VOICE=False

# Enable feedback collection
ENABLE_FEEDBACK=True

# Enable caching
ENABLE_CACHING=True

# Cache TTL (seconds)
CACHE_TTL=3600

# =============================================================================
# External Services (Optional)
# =============================================================================

# Redis URL (for caching and sessions)
REDIS_URL=redis://localhost:6379

# PostgreSQL URL (for analytics and user data)
DATABASE_URL=postgresql://user:pass@localhost/ottawa_rag

# Email service (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_app_password

# =============================================================================
# Advanced Configuration
# =============================================================================

# Enable experimental features
EXPERIMENTAL_FEATURES=False

# Model optimization
OPTIMIZE_EMBEDDINGS=True
BATCH_SIZE=32

# Performance tuning
MAX_CONCURRENT_REQUESTS=10
WORKER_PROCESSES=1

# =============================================================================
# Development Configuration
# =============================================================================

# Auto-reload on code changes (development only)
AUTO_RELOAD=True

# Enable development tools
DEV_TOOLS=True

# Mock external services (for testing)
MOCK_SERVICES=False

# Seed data for testing
USE_SAMPLE_DATA=False

# =============================================================================
# Notes
# =============================================================================

# 1. Copy this file to .env: cp .env.example .env
# 2. Fill in your actual values (especially GROQ_API_KEY)
# 3. Never commit .env to git (it's in .gitignore)
# 4. Use strong, unique values for production deployments
# 5. Environment variables override these defaults in the application